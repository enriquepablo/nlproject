
    >>> from nl import kb
    >>> dos = kb.Number(2)
    >>> suma = kb.Number('+', kb.Number(3), kb.Number('+', kb.Number(2), kb.Number(5)))
    >>> x1 = kb.Number('X1')
    >>> mix = kb.Number('+', kb.Number(3), kb.Number('+', kb.Number('X1'), kb.Number(5)))

    >>> dos.put()
    '2'

    >>> suma.put()
    '(+ 3 (+ 2 5))'

    >>> x1.put()
    '?X1'

    >>> mix.put()
    '(+ 3 (+ ?X1 5))'

    >>> dos.get_slot_constraint([])
    '2'

    >>> suma.get_slot_constraint([])
    '(+ 3 (+ 2 5))'

    >>> x1.get_slot_constraint([])
    '?X1'

    >>> mix.get_slot_constraint([])
    '(+ 3 (+ ?X1 5))'

    >>> nu = kb.Number('(+ (* 2 (- 4 2)) (/ 10 2))')

    >>> nu.value
    '+'

    >>> nu.arg1
    <nl.kb.Number object at ...>

    >>> nu.arg1.value
    '*'

    >>> nu.arg1.arg1
    <nl.kb.Number object at ...>

    >>> nu.arg1.arg1.value
    '2'

    >>> nu.arg2.arg1.value
    '10'

    >>> class Hombre(kb.Thing):pass

    >>> juan = Hombre('juan')

    >>> juan.get_slot_constraint([])
    '[juan]'

    >>> juan.get_ce([])
    '(logical (object (is-a Hombre)(name juan)))'

    >>> x1 = Hombre('X1')

    >>> x1.get_slot_constraint([])
    '?X1&:(superclassp Hombre (class ?X1))|:(eq Hombre (class ?X1))'

    >>> x1.get_ce([])
    '(logical (object (is-a Hombre)(name ?X1)))'

    >>> x1.put_action()
    '(make-instance ?X1 of Hombre)'


    >>> class Sitio(kb.Thing):pass

    >>> class Move(kb.State):
    ...     mods = {'towards': Sitio}
    ...

    >>> paya = Move(towards=Sitio('aya'))

    >>> paya.get_slot_constraint([])
    'Move [aya]'

    >>> paya.put()
    'Move [aya]'


    >>> x1=Move(towards=Sitio('X1'))

    >>> x1.get_slot_constraint([])
    'Move ?X1&:(superclassp Sitio (class ?X1))|:(eq Sitio (class ?X1))'


    >>> x1.put()
    'Move ?X1'


    >>> class Move(kb.State):
    ...     mods = {'v': kb.Number}
    ...

    >>> v1 = Move(v=kb.Number(2))

    >>> v1.get_slot_constraint([])
    'Move 2'

    >>> v1.put()
    'Move 2'

    >>> x1 = Move(v=kb.Number('X1'))


    >>> x1.get_slot_constraint(['X1'])
    'Move ?X1'


    >>> x1.put()
    'Move ?X1'

    >>> p1 = kb.Proposition(Hombre('juan'),Move(v=kb.Number(2)),kb.Time('now'))

    >>> p1.get_ce([])
    '(logical (object (is-a Proposition)(subject [juan])(predicate Move 2)(time now)))'

    >>> p2 = kb.Proposition(Hombre('X1'),Move(v=kb.Number('X2')),kb.Time('X3'))

    >>> p2.get_ce([])
    '(logical (object (is-a Proposition)(subject ?X1&:(superclassp Hombre (class ?X1))|:(eq Hombre (class ?X1)))(predicate Move ?X2)(time ?X3)))'


    >>> p1.put_action()
    '(make-instance of Proposition (subject [juan])(predicate Move 2)(time now))'

    >>> p2.put_action()
    '(make-instance of Proposition (subject ?X1)(predicate Move ?X2)(time ?X3))'

    >>> p2.put_action()
    '(make-instance of Proposition (subject ?X1)(predicate Move ?X2)(time ?X3))'


    >>> t1 = kb.Time(1)

    >>> t2 = kb.Time('X1')

    >>> t3 = kb.Time('+', kb.Number('X1'), kb.Number(3))

    >>> t4 = kb.Time('now')

    >>> t1.get_slot_constraint([])
    '1'

    >>> t2.get_slot_constraint([])
    '?X1'

    >>> t3.get_slot_constraint([])
    '(+ ?X1 3)'

    >>> t4.get_slot_constraint([])
    'now'


    >>> 
    >>> r1 = kb.Rule('r1',[kb.Proposition(kb.Thing('X1'), Move(v=kb.Number('X2')), kb.Time('X3'))
    ...              , kb.Proposition(kb.Thing('X1'), Move(v=kb.Number('X2')), kb.Time('X4'))],[
    ...               kb.Proposition(kb.Thing('X1'), Move(v=kb.Number('+',kb.Number('X2'),kb.Number(1))), kb.Time('X4'))])

    >>> r1.put_action()
    '(defrule r1 (logical (object (is-a Proposition)(subject ?X1&:(superclassp Thing (class ?X1))|:(eq Thing (class ?X1)))(predicate Move ?X2)(time ?X3))) (logical (object (is-a Proposition)(subject ?X1)(predicate Move ?X2)(time ?X4))) => (make-instance of Proposition (subject ?X1)(predicate Move (+ ?X2 1))(time ?X4)))'



    >>> a1 = kb.Arith('>', kb.Number(1), kb.Number('+', kb.Number('X1'), kb.Number(3)))

    >>> a1.get_ce(['X1'])
    '(test (> 1 (+ ?X1 3)))'

    >>> a1.get_ce(['X1'])
    '(test (> 1 (+ ?X1 3)))'


    >>> r2 = kb.Rule('r2',[kb.Proposition(kb.Thing('X1'), Move(v=kb.Number('X2')), kb.Time('X3')),
    ...              kb.Proposition(kb.Thing('X1'), Move(v=kb.Number('X2')), kb.Time('X4')),
    ...              kb.Arith('>', kb.Number(1), kb.Number('+', kb.Number('X2'), kb.Number('X3')))],
    ...              [kb.Proposition(kb.Thing('X1'), Move(v=kb.Number('+',kb.Number('X2'),kb.Number(1))), kb.Time('X4'))])

    >>> r2.put_action()
    '(defrule r2 (logical (object (is-a Proposition)(subject ?X1&:(superclassp Thing (class ?X1))|:(eq Thing (class ?X1)))(predicate Move ?X2)(time ?X3))) (logical (object (is-a Proposition)(subject ?X1)(predicate Move ?X2)(time ?X4))) (test (> 1 (+ ?X2 ?X3))) => (make-instance of Proposition (subject ?X1)(predicate Move (+ ?X2 1))(time ?X4)))'

